name: Build & Deploy Pages (Tweego + PWA)

on:
  pull_request:
  push:
    branches: [ '**' ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
      - name: Determine story prefix
        run: |
          if [ "${GITHUB_REF_NAME}" != "main" ]; then
            echo "STORY_PREFIX=latest_" >> "$GITHUB_ENV"
          fi
      - name: Cache Tweego
        uses: actions/cache@v4
        with:
          path: .bin
          key: tweego-${{ runner.os }}-2_1_1
      - name: Install Tweego
        run: scripts/get_tweego.sh
      - name: Build
        run: scripts/build.sh
      - name: Prepare GitHub Pages branch
        if: github.event_name == 'push'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          set -euo pipefail
          rm -rf gh-pages
          if git ls-remote --exit-code origin gh-pages; then
            git clone --depth 1 --branch gh-pages "https://x-access-token:${GH_TOKEN}@github.com/${REPO}.git" gh-pages
          else
            git clone --depth 1 "https://x-access-token:${GH_TOKEN}@github.com/${REPO}.git" gh-pages
            cd gh-pages
            git checkout --orphan gh-pages
            git rm -rf . || true
            find . -mindepth 1 -maxdepth 1 -not -name '.git' -exec rm -rf {} +
            cd ..
          fi
      - name: Copy build output
        if: github.event_name == 'push'
        run: |
          rsync -a dist/ gh-pages/
          touch gh-pages/.nojekyll
      - name: Regenerate index
        if: github.event_name == 'push'
        run: python3 scripts/update_pages_index.py gh-pages
      - name: Commit and push
        if: github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          cd gh-pages
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "Update pages for ${GITHUB_REF_NAME}"
            git push origin gh-pages
          else
            echo "No changes to commit"
          fi
      - name: Prepare deployment artifact
        if: github.event_name == 'push'
        run: |
          rm -rf gh-pages-public
          mkdir -p gh-pages-public
          rsync -a --delete --exclude '.git' gh-pages/ gh-pages-public/
      - name: Upload GitHub Pages artifact
        if: github.event_name == 'push'
        uses: actions/upload-pages-artifact@v3
        with:
          path: gh-pages-public
      - name: Deploy to GitHub Pages
        if: github.event_name == 'push'
        id: deploy
        uses: actions/deploy-pages@v4
      - name: Display deployment URL
        if: github.event_name == 'push'
        run: |
          echo "GitHub Pages URL: ${{ steps.deploy.outputs.page_url }}"
