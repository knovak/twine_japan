:: StoryTitle
Nikko Travel Guide

:: StoryData
{
  "ifid": "A892D347-8BFC-4A21-9E5A-3F7B9E8C1024",
  "format": "SugarCube",
  "format-version": "2.36.1",
  "start": "Table of Contents",
  "zoom": 1
}

:: StoryStylesheet [stylesheet]
@import url("./assets/styles.css");

:: Story JavaScript [script]
var script = document.createElement('script');
script.src = 'assets/scripts.js';
document.head.appendChild(script);

// Force header colors via JavaScript - should override any CSS
(function() {
    function forceHeaderColors() {
        // Target all h1 and h2 elements
        const headers = document.querySelectorAll('h1, h2');
        headers.forEach(header => {
            header.style.setProperty('color', '#1e3a8a', 'important');
        });
        
        // Target the main titles that are rendered as LI elements
        document.querySelectorAll('li').forEach(li => {
            const text = li.textContent.trim();
            if (text === '日光旅行ガイド' || text === 'Nikko Travel Guide') {
                li.style.setProperty('color', '#1e3a8a', 'important');
                li.style.setProperty('font-size', '2.5em', 'important');
                li.style.setProperty('font-weight', 'bold', 'important');
                li.style.setProperty('text-align', 'center', 'important');
                li.style.setProperty('list-style', 'none', 'important');
                li.style.setProperty('margin', '20px 0', 'important');
            }
        });
        
        // Fix main passage container - make text visible and add proper spacing
        const passage = document.querySelector('#passages .passage');
        if (passage) {
            passage.style.setProperty('color', '#333', 'important');
            passage.style.setProperty('padding', '15px', 'important');
            passage.style.setProperty('margin', '0 auto', 'important');
            passage.style.setProperty('max-width', '800px', 'important');
            passage.style.setProperty('line-height', '1.6', 'important');
            passage.style.setProperty('font-family', 'Georgia, serif', 'important');
        }
        
        // Fix paragraph spacing
        document.querySelectorAll('#passages p').forEach(p => {
            p.style.setProperty('margin', '12px 0', 'important');
            p.style.setProperty('line-height', '1.6', 'important');
            p.style.setProperty('color', '#333', 'important');
        });
        
        // Fix any invisible text in the main content
        document.querySelectorAll('#passages *').forEach(el => {
            if (el.textContent.includes('Discover the historic temples') || 
                el.textContent.includes('From ancient sacred sites')) {
                el.style.setProperty('color', '#333', 'important');
                el.style.setProperty('display', 'block', 'important');
            }
        });
        
        // Also target any elements that might contain the section titles
        const passages = document.querySelectorAll('[data-passage], .passage, tw-passage');
        passages.forEach(passage => {
            const h1s = passage.querySelectorAll('h1');
            const h2s = passage.querySelectorAll('h2');
            [...h1s, ...h2s].forEach(header => {
                header.style.setProperty('color', '#1e3a8a', 'important');
            });
        });
        
        // Target section headers (Attractions, Hotels, Transport) that might be in other elements
        document.querySelectorAll('*').forEach(el => {
            if (el.children.length === 0 && 
                (el.textContent === 'Attractions' || 
                 el.textContent === 'Hotels' || 
                 el.textContent === 'Transport')) {
                el.style.setProperty('color', '#1e3a8a', 'important');
                el.style.setProperty('font-size', '1.5em', 'important');
                el.style.setProperty('font-weight', 'bold', 'important');
                el.style.setProperty('border-bottom', '2px solid #1e3a8a', 'important');
                el.style.setProperty('padding-bottom', '8px', 'important');
                el.style.setProperty('margin', '20px 0 10px 0', 'important');
            }
        });
        
        // Reduce spacing in grid items
        document.querySelectorAll('.toc-grid').forEach(grid => {
            grid.style.setProperty('gap', '15px', 'important');
            grid.style.setProperty('margin', '20px 0', 'important');
        });
        
        document.querySelectorAll('.toc-item').forEach(item => {
            item.style.setProperty('padding', '15px', 'important');
        });
        
        // Fix highlight box
        document.querySelectorAll('.highlight').forEach(highlight => {
            highlight.style.setProperty('margin', '15px 0', 'important');
            highlight.style.setProperty('padding', '12px', 'important');
        });
    }
    
    // Run immediately
    forceHeaderColors();
    
    // Run after page loads
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', forceHeaderColors);
    }
    
    // Run after any navigation (for Twine passage changes)
    const observer = new MutationObserver(forceHeaderColors);
    observer.observe(document.body, { childList: true, subtree: true });
    
    // Also run on a timer as backup
    setInterval(forceHeaderColors, 1000);
})();
